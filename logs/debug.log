[2020-03-27 12:10:38] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:10:38] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:10:38] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:10:38] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:10:38] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:10:38] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:10:38] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:10:38] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:10:38] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:10:38] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:10:38] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:10:38] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:10:38] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:10:38] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:10:38] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18
[2020-03-27 12:10:38] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:10:38] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:10:39] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:39] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:10:40] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:10:40] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:10:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:10:41] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@583b940b]
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:10:41] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:10:41] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:10:41] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:10:41] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:10:42] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:10:42] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:10:42] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:10:42] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:10:42] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:10:42] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:10:42] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$da4338d1] - unable to determine constructor/method parameter names
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:10:42] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:10:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:10:43] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@66af521d'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@66af521d'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$8d315f4] - unable to determine constructor/method parameter names
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:10:43] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:10:44] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 10 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:44] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@66af521d'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:10:44] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:10:44] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:10:44] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:10:44] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:10:44] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:10:44] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4c446c0a
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:10:44] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:10:44] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:10:44] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:10:44] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e86ff18'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:10:45] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:10:45] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:10:45] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:10:45] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:10:45] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:10:45] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:10:45] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:10:45] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@54d956b6
[2020-03-27 12:10:45] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:10:45] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:10:53] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:10:53] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:10:53] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:10:53] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:10:53] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:10:53] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} open
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} closed
[2020-03-27 12:10:53] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:10:53] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:10:53] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:10:53] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:11:13] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - OPTIONS "/car/insertCar", parameters={}
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:11:13] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:11:13] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} open
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:11:13] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50002} closed
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:11:13] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} open
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50003} closed
[2020-03-27 12:11:13] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:11:13] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:11:13] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:11:14] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@23146278]
[2020-03-27 12:11:25] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:11:25] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@44edf8bd] for JDBC transaction
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@44edf8bd] to manual commit
[2020-03-27 12:11:25] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit false
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'DB2'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Derby'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'H2'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HDB'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HSQL'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Informix'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MS-SQL'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MySQL'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Oracle'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'PostgreSQL'
[2020-03-27 12:11:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Sybase'
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 203 getErrorCodes - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@3e4e36d6]
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 179 getErrorCodes - SQL error codes for 'MySQL' found
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 247 registerDatabase - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@3e4e36d6]: database product name is 'MySQL'
[2020-03-27 12:11:25] DEBUG org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator 285 doTranslate - Unable to translate SQLException with Error code '0', will now try the fallback translator
[2020-03-27 12:11:26] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 834 processRollback - Initiating transaction rollback
[2020-03-27 12:11:26] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 343 doRollback - Rolling back JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@44edf8bd]
[2020-03-27 12:11:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn 10001} rollback
[2020-03-27 12:11:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit true
[2020-03-27 12:11:26] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@44edf8bd] after transaction
[2020-03-27 12:11:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:11:26] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 398 doResolveHandlerMethodException - Using @ExceptionHandler com.example.demo.exception.ExceptionHandler#handlerException(Exception)
[2020-03-27 12:11:26] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:11:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"后台跑丢了，sorry","status":500}]
[2020-03-27 12:11:26] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:12:32] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:12:32] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:12:32] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:12:32] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:12:32] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:12:32] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:12:32] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:12:32] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:12:32] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:12:32] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c
[2020-03-27 12:12:32] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:12:32] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:12:32] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:12:32] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:32] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:32] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:32] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:12:33] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:12:33] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:12:33] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:12:33] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:33] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:12:34] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:34] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:12:34] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:12:34] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:12:34] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@b3cae7]
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:12:34] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:12:34] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:12:34] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:12:34] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:12:35] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:12:35] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:12:35] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:12:35] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:12:35] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:12:35] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:12:35] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$50f0b3c6] - unable to determine constructor/method parameter names
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:35] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:12:36] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:12:36] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@72942a8'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@72942a8'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$7f8090e9] - unable to determine constructor/method parameter names
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:12:36] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 10 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@72942a8'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:12:36] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:12:36] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:12:36] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:12:36] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:12:36] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:12:36] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@543e1292
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:12:36] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:12:36] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:12:36] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:12:37] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49baba7c'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:12:37] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:12:37] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:12:37] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:12:37] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:12:37] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:12:37] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:12:37] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:12:37] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@46b7b825
[2020-03-27 12:12:37] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:12:38] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:13:14] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:13:14] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:13:14] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:13:14] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:13:14] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:13:14] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:13:14] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:13:14] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:13:14] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@1ad689ac]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:13:15] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} open
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:13:15] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} closed
[2020-03-27 12:13:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:13:18] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:13:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:13:20] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:13:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@26a2823d] for JDBC transaction
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@26a2823d] to manual commit
[2020-03-27 12:13:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit false
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'DB2'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Derby'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'H2'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HDB'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HSQL'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Informix'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MS-SQL'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MySQL'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Oracle'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'PostgreSQL'
[2020-03-27 12:13:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Sybase'
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 203 getErrorCodes - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@32c83e88]
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 179 getErrorCodes - SQL error codes for 'MySQL' found
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 247 registerDatabase - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@32c83e88]: database product name is 'MySQL'
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator 285 doTranslate - Unable to translate SQLException with Error code '0', will now try the fallback translator
[2020-03-27 12:13:20] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 834 processRollback - Initiating transaction rollback
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 343 doRollback - Rolling back JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@26a2823d]
[2020-03-27 12:13:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn 10001} rollback
[2020-03-27 12:13:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit true
[2020-03-27 12:13:20] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@26a2823d] after transaction
[2020-03-27 12:13:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:13:20] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 398 doResolveHandlerMethodException - Using @ExceptionHandler com.example.demo.exception.ExceptionHandler#handlerException(Exception)
[2020-03-27 12:13:20] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:13:20] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"后台跑丢了，sorry","status":500}]
[2020-03-27 12:13:20] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:13:20] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:14:19] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:14:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:14:19] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:14:19] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:14:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:14:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:14:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:14:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:14:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:14:20] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46
[2020-03-27 12:14:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:14:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:14:20] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:14:21] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:14:21] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:14:21] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:14:22] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@dde1be9]
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:14:22] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:14:22] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:14:22] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:14:22] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:14:22] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:14:23] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4324d3d8] - unable to determine constructor/method parameter names
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:14:23] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:14:23] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:14:24] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76b773d7'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76b773d7'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$71b4b0fb] - unable to determine constructor/method parameter names
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:14:24] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 10 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76b773d7'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:14:24] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:14:24] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:14:24] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:14:24] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:14:24] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:14:24] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6e446f18
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:14:24] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:14:24] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:14:24] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:14:24] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319dc46'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:14:25] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:14:25] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:14:25] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:14:25] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:14:25] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:14:25] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:14:25] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:14:25] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6b7dfa2e
[2020-03-27 12:14:25] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:14:26] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:14:35] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:14:35] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:14:35] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:14:35] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:14:35] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:14:35] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:14:35] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:14:35] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:14:35] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@2a59fb3c]
[2020-03-27 12:14:39] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} connected
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:14:39] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] for JDBC transaction
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:14:39] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] to manual commit
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit false
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:14:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} open
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} closed
[2020-03-27 12:14:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:14:39] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'DB2'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Derby'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'H2'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HDB'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HSQL'
[2020-03-27 12:14:40] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Informix'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MS-SQL'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MySQL'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Oracle'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'PostgreSQL'
[2020-03-27 12:14:40] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Sybase'
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 203 getErrorCodes - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@3565dbbd]
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 179 getErrorCodes - SQL error codes for 'MySQL' found
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 247 registerDatabase - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@3565dbbd]: database product name is 'MySQL'
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator 285 doTranslate - Unable to translate SQLException with Error code '1406', will now try the fallback translator
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.support.SQLStateSQLExceptionTranslator 98 doTranslate - Extracted SQL state class '22' from value '22001'
[2020-03-27 12:14:40] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 834 processRollback - Initiating transaction rollback
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 343 doRollback - Rolling back JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78]
[2020-03-27 12:14:40] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn 10002} rollback
[2020-03-27 12:14:40] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit true
[2020-03-27 12:14:40] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] after transaction
[2020-03-27 12:14:40] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:14:40] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 398 doResolveHandlerMethodException - Using @ExceptionHandler com.example.demo.exception.ExceptionHandler#handlerException(Exception)
[2020-03-27 12:14:40] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:14:40] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"后台跑丢了，sorry","status":500}]
[2020-03-27 12:14:40] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:14:40] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:20:23] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} closed
[2020-03-27 12:21:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:21:57] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:21:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@b2216c9]
[2020-03-27 12:21:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:22:00] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:22:00] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:22:00] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} open
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20003, rs-50002} closed
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:22:01] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:22:01] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} open
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10002, pstmt-20004, rs-50003} closed
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:22:01] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:22:01] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] for JDBC transaction
[2020-03-27 12:22:01] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] to manual commit
[2020-03-27 12:22:01] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit false
[2020-03-27 12:22:01] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10003} connected
[2020-03-27 12:22:01] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 741 processCommit - Initiating transaction commit
[2020-03-27 12:22:01] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 328 doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78]
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} commited
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit true
[2020-03-27 12:22:01] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] after transaction
[2020-03-27 12:22:01] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:22:01] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:22:01] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"增加car成功","status":0}]
[2020-03-27 12:22:01] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:23:01] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:23:01] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:23:01] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@561c63b]
[2020-03-27 12:23:10] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] for JDBC transaction
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] to manual commit
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit false
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator 403 logTranslation - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '0' for key 'cartest.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '0' for key 'cartest.PRIMARY'
### The error may exist in file [E:\idea\workspace\demo\target\classes\mybatis\mapper\motoMapper.xml]
### The error may involve com.example.demo.dao.ICarDao.insertCars-Inline
### The error occurred while setting parameters
### SQL: insert into                   carTest                ( carId, carName, ctime, carDesc )           values( ?,                                      ?,                                          ?,                                                           ? )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '0' for key 'cartest.PRIMARY'
]
[2020-03-27 12:23:10] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:23:10] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 834 processRollback - Initiating transaction rollback
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 343 doRollback - Rolling back JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78]
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn 10002} rollback
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit true
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1331aa78] after transaction
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 398 doResolveHandlerMethodException - Using @ExceptionHandler com.example.demo.exception.ExceptionHandler#handlerException(Exception)
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10003} pool-connect
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} open
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:23:10] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"后台跑丢了，sorry","status":500}]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20007, rs-50004} closed
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10003} pool-recycle
[2020-03-27 12:23:10] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10003} pool-connect
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} open
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10003, pstmt-20008, rs-50005} closed
[2020-03-27 12:23:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10003} pool-recycle
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:23:10] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:23:10] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:26:09] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:26:09] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:26:09] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:26:09] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:26:09] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:26:09] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:26:10] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:26:10] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:26:10] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:26:10] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb
[2020-03-27 12:26:10] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:26:10] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:26:10] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:10] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:26:11] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:26:11] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:26:11] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:26:12] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@ca3c170]
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:26:12] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:26:12] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:26:13] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:26:13] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:26:13] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:26:13] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5c827ca4] - unable to determine constructor/method parameter names
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:13] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:26:14] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:26:14] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5b2e6b59'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5b2e6b59'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$8b1259c7] - unable to determine constructor/method parameter names
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:26:14] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:26:14] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 10 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:15] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5b2e6b59'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:26:15] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:26:15] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:26:15] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:26:15] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:26:15] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:26:15] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1e58515d
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:26:15] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:26:15] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:26:15] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:26:15] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@573e23eb'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:26:16] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:26:16] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:26:16] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:26:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:26:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:26:16] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:26:16] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:26:16] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6b2bb139
[2020-03-27 12:26:16] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:26:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:26:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:26:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:26:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@3b2c03c3]
[2020-03-27 12:26:19] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} connected
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72cbbe68] for JDBC transaction
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72cbbe68] to manual commit
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit false
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'DB2'
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Derby'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'H2'
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HDB'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'HSQL'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Informix'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MS-SQL'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'MySQL'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Oracle'
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'PostgreSQL'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:26:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'Sybase'
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 203 getErrorCodes - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@15add79a]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} open
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 179 getErrorCodes - SQL error codes for 'MySQL' found
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.support.SQLErrorCodesFactory 247 registerDatabase - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@15add79a]: database product name is 'MySQL'
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator 285 doTranslate - Unable to translate SQLException with Error code '0', will now try the fallback translator
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:26:19] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 834 processRollback - Initiating transaction rollback
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 343 doRollback - Rolling back JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72cbbe68]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn 10002} rollback
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit true
[2020-03-27 12:26:19] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72cbbe68] after transaction
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 398 doResolveHandlerMethodException - Using @ExceptionHandler com.example.demo.exception.ExceptionHandler#handlerException(Exception)
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} closed
[2020-03-27 12:26:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:26:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"后台跑丢了，sorry","status":500}]
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:26:19] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:26:19] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:27:15] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:27:15] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:27:15] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:27:15] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:27:15] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:27:15] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:27:15] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:27:15] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:27:15] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:27:15] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928
[2020-03-27 12:27:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:27:15] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:27:15] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:16] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:27:17] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:27:17] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:27:17] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@656fe206]
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:27:17] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:27:17] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:27:17] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:27:17] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:27:18] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:27:18] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:27:18] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:27:18] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:27:18] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:27:18] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:27:18] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$655b39d9] - unable to determine constructor/method parameter names
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:18] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:27:19] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:27:19] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c6ac51e'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c6ac51e'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$93eb16fc] - unable to determine constructor/method parameter names
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:27:19] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 10 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c6ac51e'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:27:19] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:27:19] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:27:19] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:27:19] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:27:19] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:27:19] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b13ebb1
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:27:19] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:27:19] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:27:19] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:27:20] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e300928'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:27:20] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:27:20] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:27:20] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:27:20] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:27:20] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:27:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:27:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:27:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@21e2c93e
[2020-03-27 12:27:20] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:27:21] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:27:31] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:27:31] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:27:31] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@7437ce8d]
[2020-03-27 12:27:31] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} connected
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-connect
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3954ff68] for JDBC transaction
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3954ff68] to manual commit
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit false
[2020-03-27 12:27:31] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 741 processCommit - Initiating transaction commit
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 328 doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3954ff68]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} commited
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} setAutoCommit true
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3954ff68] after transaction
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} pool-recycle
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:27:31] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} open
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20002, rs-50001} closed
[2020-03-27 12:27:31] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:27:31] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:27:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"增加car成功","status":0}]
[2020-03-27 12:27:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:27:32] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:27:32] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:29:04] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:29:04] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:29:04] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} open
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} closed
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:04] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} open
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} closed
[2020-03-27 12:29:04] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:04] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:29:04] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:29:04] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:29:24] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:29:24] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:29:24] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} open
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} closed
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:24] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} open
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} closed
[2020-03-27 12:29:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:24] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:29:24] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:29:24] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:29:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:29:45] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:29:45] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} open
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20007, rs-50006} closed
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:45] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} open
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50007} closed
[2020-03-27 12:29:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:29:45] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:29:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:29:45] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:30:18] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:30:18] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:30:18] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@70177fbc]
[2020-03-27 12:30:18] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:30:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:30:18] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] for JDBC transaction
[2020-03-27 12:30:18] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] to manual commit
[2020-03-27 12:30:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit false
[2020-03-27 12:30:18] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 741 processCommit - Initiating transaction commit
[2020-03-27 12:30:18] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 328 doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc]
[2020-03-27 12:30:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} commited
[2020-03-27 12:30:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit true
[2020-03-27 12:30:18] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] after transaction
[2020-03-27 12:30:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:30:18] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:30:18] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"增加car成功","status":0}]
[2020-03-27 12:30:18] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:31:33] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:31:33] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:31:33] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} open
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20010, rs-50008} closed
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:31:34] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} open
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50009} closed
[2020-03-27 12:31:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:31:34] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:31:34] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:31:34] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:31:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:31:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@1913df6c]
[2020-03-27 12:31:57] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] for JDBC transaction
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] to manual commit
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit false
[2020-03-27 12:31:57] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 741 processCommit - Initiating transaction commit
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 328 doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} commited
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit true
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7aef14cc] after transaction
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:31:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"增加car成功","status":0}]
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:31:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} open
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20013, rs-50010} closed
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:31:57] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} open
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50011} closed
[2020-03-27 12:31:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:31:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:31:57] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:32:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:32:09] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:32:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} open
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50012} closed
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:32:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} open
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20016, rs-50013} closed
[2020-03-27 12:32:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:32:09] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:32:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:32:09] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:33:18] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10002} closed
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:53:46] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:53:46] DEBUG org.springframework.boot.context.logging.ClasspathLoggingApplicationListener 51 onApplicationEvent - Application started with classpath: [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:53:47] DEBUG org.springframework.boot.StartupInfoLogger 56 logStarting - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
[2020-03-27 12:53:47] DEBUG org.springframework.boot.SpringApplication 679 load - Loading source class com.example.demo.DemoApplication
[2020-03-27 12:53:47] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Activated activeProfiles dev
[2020-03-27 12:53:47] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Loaded config file 'file:/E:/idea/workspace/demo/target/classes/application.properties' (classpath:/application.properties)
[2020-03-27 12:53:47] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Matching URLs for reloading : [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:53:47] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Included patterns for restart : []
[2020-03-27 12:53:47] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Excluded patterns for restart : [/spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/, /spring-boot/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter/target/classes/]
[2020-03-27 12:53:47] DEBUG org.springframework.context.support.AbstractApplicationContext 595 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df
[2020-03-27 12:53:47] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2020-03-27 12:53:47] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\config\CorsFilter.class]
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\CarController.class]
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\controller\UserController.class]
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\exception\ExceptionHandler.class]
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\CarServiceImpl.class]
[2020-03-27 12:53:47] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\service\impl\UserServiceImpl.class]
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:48] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:49] DEBUG org.springframework.beans.factory.xml.XmlBeanDefinitionReader 396 doLoadBeanDefinitions - Loaded 7 bean definitions from class path resource [druidBeans.xml]
[2020-03-27 12:53:49] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:49] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:49] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.example.demo.DemoApplication#MapperScannerRegistrar#0'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[2020-03-27 12:53:50] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\ICarDao.class]
[2020-03-27 12:53:50] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 437 scanCandidateComponents - Identified candidate component class: file [E:\idea\workspace\demo\target\classes\com\example\demo\dao\IUserDao.class]
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.url' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.username' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.password' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'applicationConfig: [classpath:/application.properties]' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.datasource.druid.publicKey' in PropertySource 'environmentProperties' with value of type String
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionAttributeSource'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionInterceptor'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2020-03-27 12:53:50] DEBUG org.springframework.ui.context.support.UiApplicationContextUtils 85 initThemeSource - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@28dc29fa]
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[2020-03-27 12:53:50] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorPageCustomizer'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dispatcherServlet'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartConfigElement'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[2020-03-27 12:53:51] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[2020-03-27 12:53:51] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 81 getArchiveFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:53:51] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 125 getExplodedWarFileDocumentRoot - Code archive: E:\maven\apache-maven-3.5.4\repository\org\springframework\boot\spring-boot\2.2.4.RELEASE\spring-boot-2.2.4.RELEASE.jar
[2020-03-27 12:53:51] DEBUG org.springframework.boot.web.servlet.server.DocumentRoot 149 logNoDocumentRoots - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2020-03-27 12:53:52] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 278 prepareWebApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statViewServletRegistrationBean'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidStatViewServletConfiguration'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'statViewServletRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'webStatFilterRegistrationBean'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidWebStatFilterConfiguration'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'webStatFilterRegistrationBean' via factory method to bean named 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'corsFilter'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestContextFilter'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'formContentFilter'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'characterEncodingFilter'
[2020-03-27 12:53:52] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
[2020-03-27 12:53:52] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans 235 logMappings - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
[2020-03-27 12:53:52] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'requestContextFilter' configured for use
[2020-03-27 12:53:52] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'characterEncodingFilter' configured for use
[2020-03-27 12:53:52] DEBUG org.springframework.web.filter.GenericFilterBean 242 init - Filter 'formContentFilter' configured for use
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'demoApplication'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carController'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'carService'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'ICarDao'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionFactory'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[2020-03-27 12:53:52] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7a9ede4d] - unable to determine constructor/method parameter names
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataSource'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'log-filter'
[2020-03-27 12:53:52] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'wall-filter'
[2020-03-27 12:53:53] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[2020-03-27 12:53:53] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:53:53] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[2020-03-27 12:53:53] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:53] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[2020-03-27 12:53:54] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} connected
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sqlSessionTemplate'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'druid-stat-interceptor'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userController'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'userService'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'exceptionHandler'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskExecutorBuilder'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultValidator'
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator 89 buildExpressionFactory - Loaded expression factory via original TCCL
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers 60 getDefault - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 148 messageInterpolator - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 180 constraintValidatorFactory - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl 194 parameterNameProvider - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 120 getValidationXmlInputStream - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 53 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via user class loader
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 60 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via TCCL
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper 66 getResettableInputStreamForPath - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser 127 getValidationXmlInputStream - No META-INF/validation.xml found. Using annotation based configuration only.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 578 logValidatorFactoryScopedConfiguration - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 579 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 580 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 581 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2020-03-27 12:53:54] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl 582 logValidatorFactoryScopedConfiguration - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'error'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameViewResolver'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'errorAttributes'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'basicErrorController'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2867c287'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2867c287'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.core.LocalVariableTableParameterNameDiscoverer 99 inspectClass - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$a92ebb70] - unable to determine constructor/method parameter names
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableCustomizer'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortCustomizer'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcConversionService'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcValidator'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'messageConverters'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonObjectMapper'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'parameterNamesModule'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jsonComponentModule'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jacksonGeoModule'
[2020-03-27 12:53:54] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'sortResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'pageableResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'applicationTaskExecutor'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[2020-03-27 12:53:55] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 615 initControllerAdviceCache - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping 351 handlerMethodsInitialized - 11 mappings in 'requestMappingHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcPathMatcher'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'routerFunctionMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'resourceHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[2020-03-27 12:53:55] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping 173 registerHandlers - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'handlerExceptionResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:55] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 297 initExceptionHandlerAdviceCache - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'mvcViewResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'defaultViewResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'viewResolver'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2867c287'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration'
[2020-03-27 12:53:55] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'statFilter'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[2020-03-27 12:53:56] DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 131 afterPropertiesSet - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'lettuceClientResources'
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.logging.InternalLoggerFactory 49 newDefaultFactory - Using Log4J2 as the default logging framework
[2020-03-27 12:53:56] DEBUG io.lettuce.core.resource.DefaultClientResources 109 <clinit> - -Dio.netty.eventLoopThreads: 4
[2020-03-27 12:53:56] DEBUG io.lettuce.core.resource.DefaultEventLoopGroupProvider 138 createEventLoopGroup - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-03-27 12:53:56] DEBUG io.netty.util.ResourceLeakDetector 130 <clinit> - -Dio.netty.leakDetection.level: simple
[2020-03-27 12:53:56] DEBUG io.netty.util.ResourceLeakDetector 131 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2020-03-27 12:53:56] DEBUG io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 195 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3668b283
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 987 isWindows0 - Platform: Windows
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 396 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 852 javaVersion0 - Java version: 8
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 121 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 145 <clinit> - sun.misc.Unsafe.copyMemory: available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 183 <clinit> - java.nio.Buffer.address: available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 244 <clinit> - direct buffer constructor: available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 314 <clinit> - java.nio.Bits.unaligned: available, true
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 379 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent0 386 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 1030 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 1149 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 1228 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 174 <clinit> - -Dio.netty.maxDirectMemory: 1884815360 bytes
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 181 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent 201 <clinit> - -Dio.netty.noPreferDirect: false
[2020-03-27 12:53:56] DEBUG io.netty.util.internal.PlatformDependent$Mpsc 891 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2020-03-27 12:53:56] DEBUG io.lettuce.core.resource.DefaultClientResources 190 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConnectionFactory'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 142 <clinit> - -Dio.netty.allocator.numHeapArenas: 8
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 143 <clinit> - -Dio.netty.allocator.numDirectArenas: 8
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 145 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 150 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 154 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 155 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 156 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 157 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 158 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 159 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 160 <clinit> - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 161 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2020-03-27 12:53:56] DEBUG io.netty.buffer.PooledByteBufAllocator 162 <clinit> - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisTemplate'
[2020-03-27 12:53:56] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'stringRedisTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionManager'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcMappingContext'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcCustomConversions'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcConverter'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'dataAccessStrategyBean'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d8996df'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'keyValueMappingContext'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisCustomConversions'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisReferenceResolver'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisConverter'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[2020-03-27 12:53:57] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 481 lazyListen - Postpone listening for Redis messages until actual listeners are added
[2020-03-27 12:53:57] DEBUG org.springframework.data.redis.listener.RedisMessageListenerContainer 217 start - Started RedisMessageListenerContainer
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gsonBuilder'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'gson'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'transactionTemplate'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restTemplateBuilder'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'multipartResolver'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'classPathRestartStrategy'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[2020-03-27 12:53:57] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer 113 start - Starting live reload server on port 35729
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.ConstructorResolver 806 createArgumentArray - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[2020-03-27 12:53:57] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry 213 getSingleton - Creating shared instance of singleton bean 'IUserDao'
[2020-03-27 12:53:58] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[2020-03-27 12:53:58] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Creating new Restarter for thread Thread[main,5,main]
[2020-03-27 12:53:58] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Immediately restarting application
[2020-03-27 12:53:58] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3fc1e6e4
[2020-03-27 12:53:58] DEBUG org.springframework.boot.logging.DeferredLog 222 logTo - Starting application com.example.demo.DemoApplication with URLs [file:/E:/idea/workspace/demo/target/classes/]
[2020-03-27 12:53:58] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver 115 logKeyFound - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[2020-03-27 12:55:58] DEBUG org.springframework.web.servlet.DispatcherServlet 526 initMultipartResolver - Detected StandardServletMultipartResolver
[2020-03-27 12:55:58] DEBUG org.springframework.web.servlet.FrameworkServlet 542 initServletBean - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2020-03-27 12:55:58] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:55:58] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:55:58] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:55:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:55:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} open
[2020-03-27 12:55:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:55:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20000, rs-50000} closed
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:55:59] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} open
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20001, rs-50001} closed
[2020-03-27 12:55:59] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:55:59] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:55:59] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:55:59] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:01] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/insertCar", parameters={}
[2020-03-27 12:56:01] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#insertCar(Car)
[2020-03-27 12:56:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@21eeb01f]
[2020-03-27 12:56:02] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 370 getTransaction - Creating new transaction with name [com.sun.proxy.$Proxy90.insertCars]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 265 doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21bc9b32] for JDBC transaction
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 283 doBegin - Switching JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21bc9b32] to manual commit
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit false
[2020-03-27 12:56:02] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager 741 processCommit - Initiating transaction commit
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 328 doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21bc9b32]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} commited
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} setAutoCommit true
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager 387 doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21bc9b32] after transaction
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:02] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:56:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"add successful","status":0}]
[2020-03-27 12:56:02] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:56:02] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} open
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20003, rs-50002} closed
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:02] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} open
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20004, rs-50003} closed
[2020-03-27 12:56:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:02] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:56:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:56:02] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:56:38] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:56:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} open
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20005, rs-50004} closed
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} open
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [0, yahmaha, 2020-03-27T04:21:57.068Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20006, rs-50005} closed
[2020-03-27 12:56:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:38] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:56:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"","carId":0,"carName":"yahmaha","ctime":"2020-03-27T04:21:57.068Z"},{"carDes (truncated)...]
[2020-03-27 12:56:38] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - OPTIONS "/car/deleteCar", parameters={}
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@66277a95]
[2020-03-27 12:56:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"delete successful!","status":0}]
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:56:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} open
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20008, rs-50006} closed
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} open
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20009, rs-50007} closed
[2020-03-27 12:56:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:56:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:56:39] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@63577452]
[2020-03-27 12:57:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} open
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20011, rs-50008} closed
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} open
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20012, rs-50009} closed
[2020-03-27 12:57:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:09] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@5269ad16]
[2020-03-27 12:57:26] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:26] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} open
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20014, rs-50010} closed
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:26] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} open
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20015, rs-50011} closed
[2020-03-27 12:57:26] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:26] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@bf4dae6]
[2020-03-27 12:57:27] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:27] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} open
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20017, rs-50012} closed
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:27] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} open
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20018, rs-50013} closed
[2020-03-27 12:57:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:27] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@518b49e]
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} open
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20020, rs-50014} closed
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} open
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20021, rs-50015} closed
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@63aa404]
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} open
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20023, rs-50016} closed
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} open
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20024, rs-50017} closed
[2020-03-27 12:57:28] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:28] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:57:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@74808850]
[2020-03-27 12:57:32] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:32] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} open
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20026, rs-50018} closed
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:32] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} open
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20027, rs-50019} closed
[2020-03-27 12:57:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:32] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:57:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:57:57] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:57:57] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} open
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20028, rs-50020} closed
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:57] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} open
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20029, rs-50021} closed
[2020-03-27 12:57:57] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:57:57] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:57:57] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:57:57] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:58:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@1153b0d7]
[2020-03-27 12:58:08] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:58:08] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} open
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20031, rs-50022} closed
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:08] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} open
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20032, rs-50023} closed
[2020-03-27 12:58:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:58:08] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:58:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@76e03acd]
[2020-03-27 12:58:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:58:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} open
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20034, rs-50024} closed
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:09] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} open
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20035, rs-50025} closed
[2020-03-27 12:58:09] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:09] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:58:09] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:29] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:58:29] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:58:29] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@3ea98d51]
[2020-03-27 12:58:35] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:35] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:35] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:45] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"an error occurred while deleting","status":0}]
[2020-03-27 12:58:45] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:58:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:58:45] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:58:45] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} open
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20037, rs-50026} closed
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:45] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} open
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20038, rs-50027} closed
[2020-03-27 12:58:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:58:45] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:58:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:58:45] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:59:24] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:59:24] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:59:24] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} open
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20039, rs-50028} closed
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:59:24] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} open
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [7621, , 2020-03-27T04:56:01.978Z, ]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20040, rs-50029} closed
[2020-03-27 12:59:24] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:59:24] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:59:24] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:59:24] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:59:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 12:59:28] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 12:59:28] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@48cc4b17]
[2020-03-27 12:59:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:59:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:59:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:59:42] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:59:42] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"delete successful!","status":0}]
[2020-03-27 12:59:42] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 12:59:42] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 12:59:42] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 12:59:42] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} open
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20042, rs-50030} closed
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:59:42] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} open
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Header: [carId, carName, ctime, carDesc]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20043, rs-50031} closed
[2020-03-27 12:59:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 12:59:42] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 12:59:42] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 12:59:42] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:00:26] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:00:26] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:00:27] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} open
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20044, rs-50032} closed
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:00:27] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} open
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [3750, 川崎四眼魔神, 2020-03-27T04:30:18.658Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20045, rs-50033} closed
[2020-03-27 13:00:27] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:00:27] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:00:27] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:00:27] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:00:37] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 13:00:37] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 13:00:37] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@3ccfb7ba]
[2020-03-27 13:00:45] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:00:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:00:45] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:00:45] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:00:45] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"delete successful!","status":0}]
[2020-03-27 13:00:45] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:02:22] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:02:22] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:02:22] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} open
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20047, rs-50034} closed
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:22] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} open
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20048, rs-50035} closed
[2020-03-27 13:02:22] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:22] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:02:22] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:02:22] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:02:30] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:02:30] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:02:30] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} open
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20049, rs-50036} closed
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:30] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} open
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [4716, cbr1000, 2020-03-27T04:27:31.439Z, ]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20050, rs-50037} closed
[2020-03-27 13:02:30] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:30] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:02:30] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:02:30] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:02:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 13:02:32] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 13:02:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@7a6711c9]
[2020-03-27 13:02:32] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:32] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:32] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:02:32] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"delete successful!","status":0}]
[2020-03-27 13:02:32] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:02:34] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:02:34] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:02:34] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} open
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20052, rs-50038} closed
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:34] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} open
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20053, rs-50039} closed
[2020-03-27 13:02:34] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:34] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:02:34] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:02:34] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:02:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:02:38] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:02:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} open
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20054, rs-50040} closed
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} open
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20055, rs-50041} closed
[2020-03-27 13:02:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:02:38] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:02:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:02:38] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:06:10] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:06:10] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:06:10] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} open
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20056, rs-50042} closed
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:06:10] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} open
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20057, rs-50043} closed
[2020-03-27 13:06:10] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:06:10] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:06:10] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:06:10] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:17:58] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:17:58] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:17:58] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} open
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20058, rs-50044} closed
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:17:58] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} open
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [5456, 川崎H2R, 2020-03-27T04:31:57.650Z, ]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20059, rs-50045} closed
[2020-03-27 13:17:58] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:17:58] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:17:58] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:17:58] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:18:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - POST "/car/deleteCar", parameters={}
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#deleteCar(Car)
[2020-03-27 13:18:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Read "application/json;charset=UTF-8" to [com.example.demo.vo.Car@64ca17c2]
[2020-03-27 13:18:02] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:18:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":"delete successful!","status":0}]
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:18:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:18:02] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} open
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20061, rs-50046} closed
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:18:02] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} open
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20062, rs-50047} closed
[2020-03-27 13:18:02] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:18:02] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:18:02] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:25:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:25:39] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:25:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} open
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20063, rs-50048} closed
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:25:39] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} open
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20064, rs-50049} closed
[2020-03-27 13:25:39] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:25:39] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:25:39] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:25:39] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 13:25:52] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 13:25:52] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 13:25:52] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} open
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20065, rs-50050} closed
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:25:52] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} open
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Header: [carId, carName, ctime, carDesc]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20066, rs-50051} closed
[2020-03-27 13:25:52] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 13:25:52] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 13:25:52] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 13:25:52] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:06:47] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:06:47] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:06:47] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} open
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20067, rs-50052} closed
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:06:47] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} open
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20068, rs-50053} closed
[2020-03-27 14:06:47] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:06:47] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:06:47] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:06:47] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:06:51] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:06:51] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:06:51] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} open
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20069, rs-50054} closed
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:06:51] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} open
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20070, rs-50055} closed
[2020-03-27 14:06:51] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:06:51] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:06:51] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:06:51] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:07:43] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:07:43] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:07:43] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} open
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20071, rs-50056} closed
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:07:43] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} open
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20072, rs-50057} closed
[2020-03-27 14:07:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:07:43] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:07:43] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:07:43] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:25:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:25:38] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:25:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} open
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20073, rs-50058} closed
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:25:38] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} open
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20074, rs-50059} closed
[2020-03-27 14:25:38] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:25:38] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:25:38] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:25:38] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:25:42] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:25:42] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:25:42] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} open
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20075, rs-50060} closed
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:25:42] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} open
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20076, rs-50061} closed
[2020-03-27 14:25:42] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:25:42] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:25:42] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:25:42] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:26:37] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:26:37] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:26:37] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} open
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20077, rs-50062} closed
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:37] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} open
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20078, rs-50063} closed
[2020-03-27 14:26:37] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:37] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:26:37] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:26:37] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:26:43] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:26:43] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:26:43] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} open
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20079, rs-50064} closed
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:43] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} open
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20080, rs-50065} closed
[2020-03-27 14:26:43] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:43] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:26:43] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:26:43] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:26:55] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:26:55] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:26:55] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} open
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20081, rs-50066} closed
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:55] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} open
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20082, rs-50067} closed
[2020-03-27 14:26:55] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:26:55] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:26:55] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:26:55] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:27:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:27:08] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:27:08] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} open
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20083, rs-50068} closed
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:08] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} open
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20084, rs-50069} closed
[2020-03-27 14:27:08] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:08] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:27:08] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:27:08] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:27:20] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:27:20] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:27:20] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} open
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20085, rs-50070} closed
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:20] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} open
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20086, rs-50071} closed
[2020-03-27 14:27:20] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:20] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:27:20] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:27:20] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
[2020-03-27 14:27:48] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - GET "/car/selectAllCarsJson", parameters={}
[2020-03-27 14:27:48] DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping 414 getHandler - Mapped to com.example.demo.controller.CarController#selectAllUsersJson()
[2020-03-27 14:27:48] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} open
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20087, rs-50072} closed
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:48] DEBUG org.springframework.jdbc.datasource.DataSourceUtils 115 doGetConnection - Fetching JDBC Connection from DataSource
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-connect
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} open
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Header: [carId, carName, ctime, carDesc]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [25, Hayabusa, 2020-03-19 20:08:01, SUZUKI GSX1300R Hayabusa（隼）]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [843, YZF R1, 2020-03-19 20:08:01, NO.5 YAMAHA YZF R1]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [1298, Y2K, 2020-03-19 20:08:01, NO.3 MTT Turbine Superbike Y2K]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [2475, Ducati, 2020-03-19 20:08:04, NO.10 Ducati 1098s]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [3080, BMW, 2020-03-19 20:08:04, NO.9 BMW K 1200 S]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [3999, Mille, 2020-03-19 20:08:01, NO.8 Aprilia RSV 1000R Mille]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [4348, Blackbird, 2020-03-19 20:08:01, NO.4 CBR1100XX Blackbird]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [6213, ZZ-R1100, 2020-03-19 20:08:01, NO.7 Kawasaki Ninja ZX-11/ZZ-R1100]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [6809, F41000R, 2020-03-19 20:08:01, NO.6 MV Agusta F41000R]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} Result: [9905, 道奇战斧, 2020-03-19 20:08:03, 世界上最快的车，8200cc的车]
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 142 resultSetLog - {conn-10001, pstmt-20088, rs-50073} closed
[2020-03-27 14:27:48] DEBUG com.alibaba.druid.filter.logging.Log4j2Filter 132 connectionLog - {conn-10001} pool-recycle
[2020-03-27 14:27:48] DEBUG org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor 273 writeWithMessageConverters - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2020-03-27 14:27:48] DEBUG org.springframework.core.log.LogFormatUtils 91 traceDebug - Writing [{"message":[{"carDesc":"SUZUKI GSX1300R Hayabusa（隼）","carId":25,"carName":"Hayabusa","ctime":"2020-0 (truncated)...]
[2020-03-27 14:27:48] DEBUG org.springframework.web.servlet.FrameworkServlet 1131 logResult - Completed 200 OK
